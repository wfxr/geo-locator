def getVersion = { ->
    def p = 'git describe --tags'.execute(); p.waitFor()
    def version = p.exitValue() == 0 ? p.text.trim() : '0.0.0'
    def dirty = 'git status -s'.execute().text.trim()
    return dirty ? "${version}-SNAPSHOT" : version
}

group 'org.zmeng'
version getVersion()

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.60"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'kotlin'
apply plugin: 'docker'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.24.0'

    compile group: 'org.locationtech.spatial4j', name: 'spatial4j', version: '0.7'
    compile group: 'com.github.davidmoten', name: 'rtree', version: '0.8.6'

    compile group: 'ch.hsr', name: 'geohash', version: '1.3.0'

    compile 'com.github.salomonbrys.kotson:kotson:2.5.0'
//    compile 'io.github.microutils:kotlin-logging:1.5.9'
//    compile 'io.github.cdimascio:java-dotenv:3.1.2'
//    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
//    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.0'

    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit5', version: '1.2.60'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.0'
}

compileKotlin { kotlinOptions.jvmTarget = "1.8" }
compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }
kotlin { experimental { coroutines "enable" } }

jar {
    archiveName = "service.jar"
    manifest { attributes 'Main-Class': 'StarterKt' }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

docker {
    registry "registry.k8s.zmeng123.com"
}

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = jar.archiveName
    dockerfile = file('Dockerfile')
    tag = "registry.k8s.zmeng123.com/wenxuan/images/$rootProject.name"
    doFirst {
        copy { from jar into stageDir }
    }
}
