def getVersion = { ->
    def p = 'git describe --tags'.execute(); p.waitFor()
    def version = p.exitValue() == 0 ? p.text.trim() : '0.0.0'
    def dirty = 'git status -s'.execute().text.trim()
    return dirty ? "${version}-SNAPSHOT" : version
}

group 'org.zmeng'
version getVersion()

buildscript {
    ext.junitVersion = "5.3.0"

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.60"
    }
}

apply plugin: 'kotlin'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile group: 'com.github.davidmoten', name: 'rtree', version: '0.8.6'
    compile group: 'ch.hsr', name: 'geohash', version: '1.3.0'
    compile 'com.github.salomonbrys.kotson:kotson:2.5.0'

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    useJUnitPlatform()
    testLogging {
        events "failed"
    }
    filter {
        includeTestsMatching "*Test"
    }
}

compileKotlin { kotlinOptions.jvmTarget = "1.8" }
compileTestKotlin { kotlinOptions.jvmTarget = "1.8" }
